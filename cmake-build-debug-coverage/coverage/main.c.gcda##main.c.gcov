        -:    0:Source:C:/Users/maxco/OneDrive/Bureau/l1/C tuto/Project C/CDataFrame/CDataFrame/main.c
        -:    0:Graph:C:\Users\maxco\OneDrive\Bureau\l1\C tuto\Project C\CDataFrame\CDataFrame\cmake-build-debug-coverage\CMakeFiles\CDataFrame.dir\main.c.gcno
        -:    0:Data:C:\Users\maxco\OneDrive\Bureau\l1\C tuto\Project C\CDataFrame\CDataFrame\cmake-build-debug-coverage\CMakeFiles\CDataFrame.dir\main.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <column.h>
        -:    4:#include <cdataframe.h>
        -:    5:
        -:    6:#define REALOC_SIZE 256
        -:    7:// need to comment the code
        -:    8:
function main called 1 returned 100% blocks executed 100%
        1:    9:int main() {
        1:   10:    COLUMN *mycol = create_column("Column 0");
        1:   10-block  0
call    0 returned 1
        1:   11:    insert_value(mycol, 52);
call    0 returned 1
        1:   12:    insert_value(mycol, 44);
call    0 returned 1
        1:   13:    insert_value(mycol, 15);
call    0 returned 1
        1:   14:    insert_value(mycol, 12);
call    0 returned 1
        1:   15:    COLUMN *mycol2 = create_column("Column 1");
call    0 returned 1
        1:   16:    insert_value(mycol2, 1);
call    0 returned 1
        1:   17:    insert_value(mycol2, 2);
call    0 returned 1
        1:   18:    insert_value(mycol2, 3);
call    0 returned 1
        1:   19:    insert_value(mycol2, 15);
call    0 returned 1
        1:   20:    COLUMN *mycol3 = create_column("Column 2");
call    0 returned 1
        1:   21:    insert_value(mycol3, 0);
call    0 returned 1
        1:   22:    insert_value(mycol3, 0);
call    0 returned 1
        1:   23:    insert_value(mycol3, 1);
call    0 returned 1
        1:   24:    insert_value(mycol3, 15);
call    0 returned 1
        1:   25:    COLUMN *mycol4 = create_column("Column 3");
call    0 returned 1
        1:   26:    insert_value(mycol4, 6);
call    0 returned 1
        1:   27:    insert_value(mycol4, 6);
call    0 returned 1
        1:   28:    insert_value(mycol4, 6);
call    0 returned 1
        1:   29:    insert_value(mycol4, 15);
call    0 returned 1
        1:   30:    COLUMN *mycol5 = create_column("Column 4");
call    0 returned 1
        1:   31:    insert_value(mycol5, 7);
call    0 returned 1
        1:   32:    insert_value(mycol5, 5);
call    0 returned 1
        1:   33:    insert_value(mycol5, 42);
call    0 returned 1
        1:   34:    insert_value(mycol5, 15);
call    0 returned 1
        -:   35:
        -:   36:
        -:   37:    /*
        -:   38:
        -:   39:    printf("Occurrences of 44: %d\n", count_occ(mycol, 44));
        -:   40:    printf("Value at position 1: %d\n", positionval(mycol, 1));
        -:   41:    printf("Values greater than 20: %d\n", valuegreater(mycol, 20));
        -:   42:    printf("Values less than 30: %d\n", valueless(mycol, 30));
        -:   43:    printf("Values equal to 44: %d\n", valuequal(mycol, 44));
        -:   44:    */
        -:   45:
        1:   46:    CDATAFRAME *cdf = create_cdataframe(5);
call    0 returned 1
        1:   47:    printf("%d", add_column_cdf(cdf, mycol));
call    0 returned 1
call    1 returned 1
        1:   48:    printf("%d", add_column_cdf(cdf, mycol2));
call    0 returned 1
call    1 returned 1
        1:   49:    printf("%d", add_column_cdf(cdf, mycol3));
call    0 returned 1
call    1 returned 1
        1:   50:    printf("%d", add_column_cdf(cdf, mycol4));
call    0 returned 1
call    1 returned 1
        1:   51:    printf("%d", add_column_cdf(cdf, mycol5));
call    0 returned 1
call    1 returned 1
        1:   52:    printf("\n");
call    0 returned 1
        -:   53:
        -:   54:    /*
        -:   55:    print_rows_cdf(cdf, 2, 2);
        -:   56:    print_cols_cdf(cdf, 1, 2);
        -:   57:    print_cdf(cdf);
        -:   58:    print_columns_title(cdf);
        -:   59:    rename_column_cdf(cdf, 2, "Testtt");
        -:   60:    print_columns_title(cdf);
        -:   61:
        -:   62:
        -:   63:    print_cdf(cdf);
        -:   64:    int tab[5] = {1,2,3,4,5};
        -:   65:    add_row_cdf(cdf, tab, 2);
        -:   66:    print_cdf(cdf);
        -:   67:    delete_row_cdf(cdf, 2);
        -:   68:    print_cdf(cdf);
        -:   69:
        -:   70:
        -:   71:    print_cdf(cdf);
        -:   72:    search_value_cdf(cdf, 1000);
        -:   73:
        -:   74:
        -:   75:    print_cdf(cdf);
        -:   76:    access_and_replace_value_by_pos(cdf, 20, 1, 3);
        -:   77:    print_cdf(cdf);
        -:   78:
        -:   79:    CDATAFRAME *cdf = load_from_csv("C:\\Users\\alban\\CLionProjects\\CDataFrame\\test_file_csv.csv",6);
        -:   80:    print_cdf(cdf);
        -:   81:
        -:   82:
        -:   83:    print_cdf(cdf);
        -:   84:    save_into_csv(cdf, "Test.csv");
        -:   85:    */
        -:   86:
        1:   87:    return 0;
        -:   88:}
